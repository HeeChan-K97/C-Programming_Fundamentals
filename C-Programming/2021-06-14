변수와 연산자-Variables and Operators

연산자: 특정연산을 요구할 때 사용하는 약속된 기호

**덧셈연산을 하고 그 결과를 메모리 공간에 저장한다. 그리고 메모리 공간에 저장된 값을 출력한다.
덧셈결과를 저장할 때 우리는 변수를 사용하여 저장한다.
**값을 저장할 수 있는 메모리 공간에 붙은 이름, 혹은 메모리 공간 자체를 가리켜 변수라 한다.

예)
int main(void)
{
  int num; // num이라는 이름의 변수선언
  . . . .
  num=20; //변수 num에 20 저장
  printf("%d", num);  //변수 num의 값 참조(reference)
}

C언어에서 "="는 값의 대입을 뜻한다. 대입 연산자.
***대입연산자의 오른편에 오는 값을 왼편에 오는 변수에 저장하는 형태로 사용이 된다.

------------변수의 다양한 선언 및 초기화 방법------------------
초기화 = 변수의 값을 처음 저장할 때
대입/대입연산 = 그 이후에 변수의 값을 바꿀때
#include <stdio.h>

int main(void)
{
    int num1, num2;   //변수 num1 & num2의 선언
    int num3=30, num4=40;   //변수 num3, num4의 선언 및 초기화
    
    printf("num1: %d, num2: %d \n", num1, num2);
    num1=10;    //num1변수의 초기화
    num2=20;    //num2변수의 초기화
    
    printf("num1: %d, num2: %d \n", num1, num2);
    printf("num3: %d, num4: %d \n", num3, num4);
    return 0;   
}

출력결과:
num1: -239189023890   num2: -1312379812
num1: 10, num2: 20
num3: 30, num4: 40
**변수를 선언만 하고 초기화하지 않으면 아무런 의미가 없는 값이 된다.
-------------------------------------------------------------

<변수를 선언할 때 주의할 점>
중괄호 내에 변수를 선언할 경우, 변수의 선언문은 중괄호의 앞부분에 위치해야 한다.

<변수의 이름을 지을 때 적용되는 규칙들>
1. 변수의 이름은 알파벳, 숫자, 언더바(_)로 구성된다.(특수문자 불가)
2. C언어는 대소문자를 구분한다. 따라서 변수 Num과 변수 num은 서로 다른 변수이다.
3. 변수의 이름은 숫자로 시작할 수 없고, 키워드도 변수의 이름으로 사용할 수 없다
4. 이름 사이에 공백이 삽입될 수 없다.

<Operators>

a = a + b  -->  a += b  //동일 연산으로 a에 저장된 값을 b만큼 증가시켜 다시 새로운 a를 저장하는 방법
a = a - b  -->  a -= b
a = a * b  --> a *= b
a = a / b  --> a /= b
a = a % b  --> a %= b

------------------------------------------------------------------------------

증가, 감소 연산자

++num   //값을 1 증가 후, 속한 문장의 나머지를 진행(선 증가, 후 연산)
num++   //속한 문장을 먼저 진행한 후, 값을 1 증가(선 연산, 후 증가)
--num   //값을 1감소 후, 속한 문장의 나머지를 진행(선 감소, 후 증가)
num--   //속한 문장을 먼저 징행한 후, 값을 1 감소(선 연산, 후 감소)

출처: 열혈 C 프로그레밍
Page: 50-58
