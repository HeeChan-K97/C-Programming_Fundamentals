#include <stdio.h>
#include <stdlib.h>

int main()
{
    /*int i=1;
    while(i<=5){
        printf("%d\n", i);
        i++;
    }
    */
    //while루프를 for 루프로 바꾸는 기본적인 방법
    int i;
    for(i=1; i<=5; i++){
        printf("%d \n", i);
    }
    printf("\n");
    //example of printing out elements in an array
    int lottoNumbers[]={4, 8, 15, 16, 23, 42};

    int x;
    for(x=0; x<6; x++)
        printf("%d \n", lottoNumbers[x]);

    return 0;
}

//anything we can do with while loop we can do them in for loop
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<2D Array printing and Nested For Loop situation>
#include<stdio.h>
#include<stdlib.h>

int main(){
    int nums[3][2] = {
            {1, 2},
            {3, 4},
            {5, 6}
    };
    //printf("%d", nums[0][0]);
    //해당된 위치에 있는 element 를 

    int i, j;
    for(i=0; i<3; i++)
    {
        for(j=0; j<2; j++)
            printf("%d, ", nums[i][j]);
    printf("\n");
    }
    return 0;
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include<stdio.h>
#include<stdlib.h>
//writing a file
/*int main(){

    FILE * fpointer = fopen("employees.txt", "w");  //opens a new text file

    //w: when we want to write something on a file
    //a: we append some new information on the file
    fprintf(fpointer, "JIM: Salesman\nPam: Receptionist\nOscar: Accounting");

    fclose(fpointer); //closes the file

    return 0;
}
*/
//reading a filebuf

int main(){

    char line[255];
    FILE * fpointer = fopen("employees.txt", "r");  //opens a new text file

    fgets(line, 255, fpointer);//the first line of the text file would be stored inside the line variable
    fgets(line, 255, fpointer);//the second line of the text file would be stored inside the line variable
    printf("%s", line);//prints the second line of the text file

    fclose(fpointer);

    return 0;
}
