자료형 데이터는 표현하는 기준이다. 그렇기 때문에 변수도 상수도 자료형에 근거한다.
자료형 데이터는 정수형과 실수형으로 나뉘어져 있다.

자료형에는 다양한 종류들이 있는데 이들이 존재하는 이유는 두가지로 나뉜다.

1. 데이터의 표현방식이 다르므로, 최소 둘 이상의 자료형이 필요하다.
2. 메모리 공간의 적절한 사용을 위해서 다양한 크기의 자료형이 필요하다.

연산자인 sizeof(); 를 사용하여 자료형의 크기를 확인 가능하다.
여기서 sizefo();는 함수가 아닌 연산자임을 잊지말자.

일반적으로 CPU가 처리하기에 가장 적합한 크기의 정수 자료형을 int로 정의한다. 따라서 int형 연산의 속도가
다른 자료형의 연산속도에 비해서 동일하거나 더 빠르다.

double의 입력을 요구할 때에는 %lf
double의 출력을 요구할 때에는 %f

정수 자료형의 이름에 한해서 unsigned 선언을 추가하면, 0 이상의 값만 표현하는 자료형이 되어서, 표현할 수 있는 값의 범위가 양의 정수 방향으로 두 배 더 넓어지게 된다.

* 정수 자료형의 이름 앞에만 unsigned를 붙일 수 있다.
* unsigned가 붙으면, MSB도 데이터의 크기를 표현하는데 사용이 된다.
* 따라서 표현할 수 있는 값이 0 이상의 범위로 두 배가 된다.

int와 singed int는 같은 선언이며 short와 signed short도 같은 선언이다. 따라서 우리는 애초에 signed를 생략하고 코딩을 해준다.

---문자의 표현 방식과 문자를 위한 자료형---

ASCII 코드:
0부터 127가지의 문자를 숫자로 표현하는 약속문
어떤 정수를 아스키 코드 값으로 해석해서 아스키 코드 문자를 출력하는것과 어떤 문자를 숫자화시켜 아스키 코드로 표현하는 것이 가능하다.

