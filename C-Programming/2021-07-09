Chapter 8.조건에 따른 흐름의 분기

if문:if문은 독립적으로 사용되어 '조건적 실행'을 가능하게 한다.
예)
if(num1>num2)
{
  printf("num1이 num2보다 큽니다. \n");
  printf("%d > %d \n", num1, num2);
}

** 조건이 만족될 때 실행할 문장이 하나라면 중괄호는 생략이 가능하다.
------------------------------------------------------------------------------------------------------------------------------
if~else문: if와 else가 만나서 이루는 문장의 수는 둘이 아니라 하나다.

예)
if(조건1)
{
  //조건 1 만족 시 실행
}
else if(조건2)
{
  //조건 2 만족 시 실행
}
else if(조건3)
{
  //조건 3 만족 시 실행
}
else
{
  //모든 조건이 불만족 시에 실행된다
}

** 조건의 만족여부 검사는 위에서 아래로 진행이 된다.
** 조건이 만족되어서 해당 블록을 실행하고 나면 마지막 else까지도 건너뛴다.
** if...else if...else는 if~else문을 중첩시키되 else블록을 대상으로 중첩시킨 결과이다.

<조건 연산자: 피 연산자가 세 개인 '삼 항 연산자'>
int num3 = (num1 > num2) ? (num1) : (num2);
num1이 num2보다 큰가? '참'이면 num3는 num1 '거짓'이면 num3가 num2가 된다.
------------------------------------------------------------------------------------------------------------------------------
반복문의 생략과 탈출: continue & break

break;    //break문을 가장 가까이서 감싸고 있는 반복문 하나를 빠져 나오게 된다.
continue;   //반복문 안에서 어떤 문장을 싱행하게 되면, 실행중인 위치에 상관없이 반복문의 조건검사 위치로 이동을 한다.
              그리고 검사결과 반복족건이 여전히 '참'이라면 반복영역을 다시 실행하게 된다.
------------------------------------------------------------------------------------------------------------------------------
switch문:
