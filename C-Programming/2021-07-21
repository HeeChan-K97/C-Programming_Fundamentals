Chapter 13 [포인터를 이용한 배열의 접근]

문제1: 길이가 5인 int형 배열 arr을 선언하고 이를 1, 2, 3, 4, 5로 초기화한 다음, 이 배열의 첫 번째 요소를 가리키는 포인터 변수 ptr을 선언한다.
       그 다음 포인터 변수 ptr에 저장된 값을 증가시키는 형태의 연산을 기반을 배열요소에 접근하면서 모든 배열요소의 값을 2씩 증가시키고, 정상적으로
       증가가 이뤄졌는지 확인하는 예제를 작성해보자.
       
#include <stdio.h>

int main(void)
{
    int arr[5]={1, 2, 3, 4, 5};
    int * ptr=arr;
    int i;
    for(i=0; i<5; i++)
    {
        *ptr += 2;    //포인터의 값이 바뀌는 식
        ptr++;    //포인터의 위치가 바뀌는 식
     }       
     
     for(i=0; i<5; i++)
        printf("%d", arr[i]);
        
     return 0;
}     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------      
문제2: 포인터 변수 ptr에 저장된 값을 변경시키지 않고, ptr을 대상으로 덧셈연산을 하여, 그 결과로 반환되는 주소 값을 통해서 모든 배열요소에 
       접근하여 값을 2씩 증가시키는 예제를 작성해보자.
       
#include <stdio.h>

int main(void)
{
    int arr[5]={1, 2, 3, 4, 5};
    int * ptr=arr;
    int i;
   
   for(i=0; i<5; i++)
        *(ptr+i) += 2;    //위치를 증가시키고 값을 증가시키는 요소가 공존한다.
    
    for(i=0; i<5; i++)
        printf("%d", arr[i]);
    
    return 0;
}      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
문제3: 길이가 5인 int형 배열 arr을 선언하고 이를 1, 2, 3, 4, 5로 초기화한 다음, 이 배열의 마지막 요소를 가리키는 포인터 변수 ptr을 선언한다.
       그 다음 포인터 변수 ptr에 저장된 값을 감소시키는 형태의 연산을 기반으로 모든 배열요소에 접근하여, 배열에 저장된 모든 정수를 더하여
       그 결과를 출력하는 프로그램을 작성해보자.
       
#include <stdio.h>

int main(void)
{
    int arr[5]={1, 2, 3, 4, 5};
    int * ptr=&arr[4];
    int total=0, i;
    
    for(i=0; i<5; i++)
        total += *(ptr--);
        
    printf("%d", total);
    return 0;
}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
